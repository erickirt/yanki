// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`basic synchronization > synchronizes notes to anki and has he correct deck name 1`] = `
{
  "deletedDecks": [],
  "deletedNotes": [],
  "duration": 0,
  "synced": [
    {
      "action": "created",
      "filePath": "basic-and-reversed-card.md",
      "note": {
        "deckName": "minimal-notes",
        "fields": {
          "Back": "<p>I'm an <strong>answer</strong> which is sometimes the question</p>
",
          "Front": "<p>I'm <em>question</em> which is sometimes the answer</p>
",
          "YankiNamespace": "Yanki Basic Sync Test",
        },
        "modelName": "Yanki - Basic (and reversed card)",
        "noteId": 0,
        "tags": [],
      },
    },
    {
      "action": "created",
      "filePath": "basic-no-back.md",
      "note": {
        "deckName": "minimal-notes",
        "fields": {
          "Back": "<p><em>Intentionally blank.</em></p>
",
          "Front": "<p>I'm the front of the card</p>
<p>I have no back.</p>
",
          "YankiNamespace": "Yanki Basic Sync Test",
        },
        "modelName": "Yanki - Basic",
        "noteId": 0,
        "tags": [],
      },
    },
    {
      "action": "created",
      "filePath": "basic-type-in-the-answer.md",
      "note": {
        "deckName": "minimal-notes",
        "fields": {
          "Back": "I'm the thing you need to type on the card",
          "Front": "<p>I'm the prompt</p>
<h1>What an amazing</h1>
<ul>
<li><em>thing</em></li>
<li>that</li>
<li>is</li>
</ul>
",
          "YankiNamespace": "Yanki Basic Sync Test",
        },
        "modelName": "Yanki - Basic (type in the answer)",
        "noteId": 0,
        "tags": [],
      },
    },
    {
      "action": "created",
      "filePath": "basic.md",
      "note": {
        "deckName": "minimal-notes",
        "fields": {
          "Back": "<p>I'm the back of the card</p>
",
          "Front": "<p>I'm the front of the card</p>
",
          "YankiNamespace": "Yanki Basic Sync Test",
        },
        "modelName": "Yanki - Basic",
        "noteId": 0,
        "tags": [],
      },
    },
    {
      "action": "created",
      "filePath": "cloze-extra.md",
      "note": {
        "deckName": "minimal-notes",
        "fields": {
          "Back": "<p>And some extra stuff.</p>
",
          "Front": "<p>This card has a {{c1::cloze}} or {{c1::two::(here's a hint)}}.</p>
",
          "YankiNamespace": "Yanki Basic Sync Test",
        },
        "modelName": "Yanki - Cloze",
        "noteId": 0,
        "tags": [],
      },
    },
    {
      "action": "created",
      "filePath": "cloze.md",
      "note": {
        "deckName": "minimal-notes",
        "fields": {
          "Back": "",
          "Front": "<p>This card has a {{c1::cloze}} or {{c1::two::(here's a hint)}}.</p>
",
          "YankiNamespace": "Yanki Basic Sync Test",
        },
        "modelName": "Yanki - Cloze",
        "noteId": 0,
        "tags": [],
      },
    },
  ],
}
`;

exports[`complex trees > makes the right decisions about deck naming 2`] = `
{
  "deletedDecks": [],
  "deletedNotes": [],
  "duration": 0,
  "synced": [
    {
      "action": "created",
      "filePath": "basic.md",
      "note": {
        "deckName": "complex-tree::deep-contiguous",
        "fields": {
          "Back": "<p><em>Intentionally blank.</em></p>
",
          "Front": "<p>I'm just a note, you know?</p>
",
          "YankiNamespace": "Yanki Complex Tree Test",
        },
        "modelName": "Yanki - Basic",
        "noteId": 0,
        "tags": [],
      },
    },
    {
      "action": "created",
      "filePath": "basic.md",
      "note": {
        "deckName": "complex-tree::solo-note",
        "fields": {
          "Back": "<p><em>Intentionally blank.</em></p>
",
          "Front": "<p>I'm just a note, you know?</p>
",
          "YankiNamespace": "Yanki Complex Tree Test",
        },
        "modelName": "Yanki - Basic",
        "noteId": 0,
        "tags": [],
      },
    },
    {
      "action": "created",
      "filePath": "basic.md",
      "note": {
        "deckName": "complex-tree::deep-contiguous::within",
        "fields": {
          "Back": "<p><em>Intentionally blank.</em></p>
",
          "Front": "<p>I should be in the deck 'another'</p>
",
          "YankiNamespace": "Yanki Complex Tree Test",
        },
        "modelName": "Yanki - Basic",
        "noteId": 0,
        "tags": [
          "mdank",
          "yes",
        ],
      },
    },
    {
      "action": "created",
      "filePath": "basic.md",
      "note": {
        "deckName": "complex-tree::sibling-folders::brother",
        "fields": {
          "Back": "<p><em>Intentionally blank.</em></p>
",
          "Front": "<p>I should be in the deck 'another'</p>
",
          "YankiNamespace": "Yanki Complex Tree Test",
        },
        "modelName": "Yanki - Basic",
        "noteId": 0,
        "tags": [
          "mdank",
          "yes",
        ],
      },
    },
    {
      "action": "created",
      "filePath": "basic.md",
      "note": {
        "deckName": "complex-tree::sibling-folders::sister",
        "fields": {
          "Back": "<p><em>Intentionally blank.</em></p>
",
          "Front": "<p>I should be in the deck 'another'</p>
",
          "YankiNamespace": "Yanki Complex Tree Test",
        },
        "modelName": "Yanki - Basic",
        "noteId": 0,
        "tags": [
          "mdank",
          "yes",
        ],
      },
    },
    {
      "action": "created",
      "filePath": "basic.md",
      "note": {
        "deckName": "complex-tree::deep-contiguous::within::within",
        "fields": {
          "Back": "<p><em>Intentionally blank.</em></p>
",
          "Front": "<p>I should be in the deck 'another'</p>
",
          "YankiNamespace": "Yanki Complex Tree Test",
        },
        "modelName": "Yanki - Basic",
        "noteId": 0,
        "tags": [
          "mdank",
          "yes",
        ],
      },
    },
    {
      "action": "created",
      "filePath": "basic.md",
      "note": {
        "deckName": "complex-tree::deep-non-contiguous::within::within",
        "fields": {
          "Back": "<p><em>Intentionally blank.</em></p>
",
          "Front": "<p>I'm just a note, you know?</p>
",
          "YankiNamespace": "Yanki Complex Tree Test",
        },
        "modelName": "Yanki - Basic",
        "noteId": 0,
        "tags": [],
      },
    },
    {
      "action": "created",
      "filePath": "basic.md",
      "note": {
        "deckName": "complex-tree::deep-contiguous::within::within::within",
        "fields": {
          "Back": "<p><em>Intentionally blank.</em></p>
",
          "Front": "<p>I should be in the deck 'another'</p>
",
          "YankiNamespace": "Yanki Complex Tree Test",
        },
        "modelName": "Yanki - Basic",
        "noteId": 0,
        "tags": [
          "mdank",
          "yes",
        ],
      },
    },
    {
      "action": "created",
      "filePath": "basic.md",
      "note": {
        "deckName": "complex-tree::deep-island::within::within::within",
        "fields": {
          "Back": "<p><em>Intentionally blank.</em></p>
",
          "Front": "<p>I'm just a note, you know?</p>
",
          "YankiNamespace": "Yanki Complex Tree Test",
        },
        "modelName": "Yanki - Basic",
        "noteId": 0,
        "tags": [],
      },
    },
  ],
}
`;

exports[`surplus frontmatter > preserves and merges unrelated surplus frontmatter 1`] = `
{
  "deletedDecks": [],
  "deletedNotes": [],
  "duration": 0,
  "synced": [
    {
      "action": "created",
      "filePath": "basic-with-irrelevent-frontmatter.md",
      "note": {
        "deckName": "surplus-frontmatter",
        "fields": {
          "Back": "<p><em>Intentionally blank.</em></p>
",
          "Front": "<p>I'm a note</p>
",
          "YankiNamespace": "Yanki Surplus Frontmatter Test",
        },
        "modelName": "Yanki - Basic",
        "noteId": 0,
        "tags": [],
      },
    },
    {
      "action": "created",
      "filePath": "basic-with-surplus-frontmatter.md",
      "note": {
        "deckName": "surplus-frontmatter",
        "fields": {
          "Back": "<p><em>Intentionally blank.</em></p>
",
          "Front": "<p>I'm a note</p>
",
          "YankiNamespace": "Yanki Surplus Frontmatter Test",
        },
        "modelName": "Yanki - Basic",
        "noteId": 0,
        "tags": [],
      },
    },
  ],
}
`;

exports[`surplus frontmatter > preserves and merges unrelated surplus frontmatter 2`] = `
[
  "yes",
  "no",
  "maybe",
]
`;

exports[`surplus frontmatter > preserves and merges unrelated surplus frontmatter 3`] = `"unrelated"`;

exports[`surplus frontmatter > preserves and merges unrelated surplus frontmatter 4`] = `
[
  "yes",
  "no",
  "maybe",
]
`;

exports[`surplus frontmatter > preserves and merges unrelated surplus frontmatter 5`] = `"unrelated"`;
